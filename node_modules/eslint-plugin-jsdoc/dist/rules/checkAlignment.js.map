{"version":3,"sources":["../../src/rules/checkAlignment.js"],"names":["sourceCode","jsdocNode","report","indent","indentLevel","length","sourceLines","getText","split","slice","map","line","filter","trim"],"mappings":";;;;;;;AAAA;;;;eAEe,2BAAa,gBAKtB;AAAA,MAJJA,UAII,QAJJA,UAII;AAAA,MAHJC,SAGI,QAHJA,SAGI;AAAA,MAFJC,MAEI,QAFJA,MAEI;AAAA,MADJC,MACI,QADJA,MACI;AACJ;AACA,MAAMC,WAAW,GAAGD,MAAM,CAACE,MAAP,GAAgB,CAApC;AACA,MAAMC,WAAW,GAAGN,UAAU,CAACO,OAAX,CAAmBN,SAAnB,EAA8BO,KAA9B,CAAoC,IAApC,EACjBC,KADiB,CACX,CADW,EAEjBC,GAFiB,CAEb,UAACC,IAAD,EAAU;AACb,WAAOA,IAAI,CAACH,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAP;AACD,GAJiB,EAKjBI,MALiB,CAKV,UAACD,IAAD,EAAU;AAChB,WAAO,CAACA,IAAI,CAACE,IAAL,GAAYR,MAApB;AACD,GAPiB,CAApB;AAHI;AAAA;AAAA;;AAAA;AAYJ,yBAAmBC,WAAnB,8HAAgC;AAAA,UAArBK,IAAqB;;AAC9B,UAAIA,IAAI,CAACN,MAAL,KAAgBD,WAApB,EAAiC;AAC/BF,QAAAA,MAAM,CAAC,qCAAD,CAAN;AACA;AACD;AACF;AAjBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBL,CAvBc,C","sourcesContent":["import iterateJsdoc from '../iterateJsdoc';\n\nexport default iterateJsdoc(({\n  sourceCode,\n  jsdocNode,\n  report,\n  indent\n}) => {\n  // `indent` is whitespace from line 1 (`/**`), so slice and account for \"/\".\n  const indentLevel = indent.length + 1;\n  const sourceLines = sourceCode.getText(jsdocNode).split('\\n')\n    .slice(1)\n    .map((line) => {\n      return line.split('*')[0];\n    })\n    .filter((line) => {\n      return !line.trim().length;\n    });\n\n  for (const line of sourceLines) {\n    if (line.length !== indentLevel) {\n      report('Expected JSDoc block to be aligned.');\n      break;\n    }\n  }\n});\n"],"file":"checkAlignment.js"}