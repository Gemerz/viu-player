{"version":3,"sources":["../../src/rules/requireReturns.js"],"names":["jsdoc","report","utils","hasATag","isConstructor","targetTagName","getPreferredTagName","jsdocTags","_","filter","tags","tag","sourcecode","getFunctionSourceCode","flattenedSource","replace","startsWithReturn","endsWithReturn","implicitReturn","implicitObjectReturn","matcher","RegExp","join","positiveTest","match","length","negativeTest","JSON","stringify"],"mappings":";;;;;;;AAAA;;AACA;;;;eAEe,2BAAa,gBAItB;AAAA,MAHJA,KAGI,QAHJA,KAGI;AAAA,MAFJC,MAEI,QAFJA,MAEI;AAAA,MADJC,KACI,QADJA,KACI;;AACJ,MAAIA,KAAK,CAACC,OAAN,CAAc,CAChB;AACA;AACA;AACA;AACA,cALgB,EAMhB,UANgB,EAQhB;AACA,eATgB,CAAd,CAAJ,EAUI;AACF;AACD;;AAED,MAAID,KAAK,CAACE,aAAN,EAAJ,EAA2B;AACzB;AACD;;AAED,MAAMC,aAAa,GAAGH,KAAK,CAACI,mBAAN,CAA0B,SAA1B,CAAtB;;AAEA,MAAMC,SAAS,GAAGC,gBAAEC,MAAF,CAAST,KAAK,CAACU,IAAf,EAAqB;AACrCC,IAAAA,GAAG,EAAEN;AADgC,GAArB,CAAlB;;AAIA,MAAMO,UAAU,GAAGV,KAAK,CAACW,qBAAN,EAAnB,CAzBI,CA2BJ;;AACA,MAAMC,eAAe,GAAGF,UAAU,CAACG,OAAX,CAAmB,cAAnB,EAAmC,EAAnC,CAAxB;AAEA,MAAMC,gBAAgB,GAAG,oBAAzB;AAEA,MAAMC,cAAc,GAAG,eAAvB;AAEA,MAAMC,cAAc,GAAG,mBAAvB;AAEA,MAAMC,oBAAoB,GAAG,oBAA7B;AAEA,MAAMC,OAAO,GAAG,IAAIC,MAAJ,CAAW,CACzBL,gBADyB,EAEzBC,cAFyB,EAGzBE,oBAHyB,EAIzBD,cAJyB,EAKzBI,IALyB,CAKpB,GALoB,CAAX,EAKH,KALG,CAAhB;AAOA,MAAMC,YAAY,GAAG,CAACT,eAAe,CAACU,KAAhB,CAAsBJ,OAAtB,KAAkC,EAAnC,EAAuCK,MAAvC,GAAgD,CAArE;AAEA,MAAMC,YAAY,GAAG,CAACZ,eAAe,CAACU,KAAhB,CAAsB,qBAAtB,KAAgD,EAAjD,EAAqDC,MAArD,GAA8D,CAA9D,IACnB,CAACX,eAAe,CAACU,KAAhB,CAAsB,aAAtB,KAAwC,EAAzC,EAA6CC,MAA7C,GAAsD,CADxD;;AAGA,MAAIE,IAAI,CAACC,SAAL,CAAerB,SAAf,MAA8B,IAA9B,IAAsCgB,YAAtC,IAAsD,CAACG,YAA3D,EAAyE;AACvEzB,IAAAA,MAAM,CAAC,oBAAoBI,aAApB,GAAoC,eAArC,CAAN;AACD;AACF,CAzDc,C","sourcesContent":["import _ from 'lodash';\nimport iterateJsdoc from '../iterateJsdoc';\n\nexport default iterateJsdoc(({\n  jsdoc,\n  report,\n  utils\n}) => {\n  if (utils.hasATag([\n    // inheritdoc implies that all documentation is inherited\n    // see http://usejsdoc.org/tags-inheritdoc.html\n    //\n    // As we do not know the parent method, we cannot perform any checks.\n    'inheritdoc',\n    'override',\n\n    // A constructor function is assumed to return a class instance\n    'constructor'\n  ])) {\n    return;\n  }\n\n  if (utils.isConstructor()) {\n    return;\n  }\n\n  const targetTagName = utils.getPreferredTagName('returns');\n\n  const jsdocTags = _.filter(jsdoc.tags, {\n    tag: targetTagName\n  });\n\n  const sourcecode = utils.getFunctionSourceCode();\n\n  // build a one-liner to test against\n  const flattenedSource = sourcecode.replace(/\\r?\\n|\\r|\\s/g, '');\n\n  const startsWithReturn = '(\\\\)\\\\s?\\\\{return)';\n\n  const endsWithReturn = '(return.*\\\\})';\n\n  const implicitReturn = '(\\\\s?=>\\\\s?\\\\b.*)';\n\n  const implicitObjectReturn = '(\\\\s?=>\\\\s?\\\\(\\\\{)';\n\n  const matcher = new RegExp([\n    startsWithReturn,\n    endsWithReturn,\n    implicitObjectReturn,\n    implicitReturn\n  ].join('|'), 'gim');\n\n  const positiveTest = (flattenedSource.match(matcher) || []).length > 0;\n\n  const negativeTest = (flattenedSource.match(/(\\{.*\\{.*return)/gim) || []).length > 0 &&\n    (flattenedSource.match(/(return)/gim) || []).length < 2;\n\n  if (JSON.stringify(jsdocTags) === '[]' && positiveTest && !negativeTest) {\n    report('Missing JSDoc @' + targetTagName + ' declaration.');\n  }\n});\n"],"file":"requireReturns.js"}