"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _lodash = _interopRequireDefault(require("lodash"));

var _iterateJsdoc = _interopRequireDefault(require("../iterateJsdoc"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _iterateJsdoc.default)(function (_ref) {
  var sourceCode = _ref.sourceCode,
      jsdoc = _ref.jsdoc,
      report = _ref.report,
      context = _ref.context,
      jsdocNode = _ref.jsdocNode;
  var always;

  var jsdocTags = _lodash.default.filter(jsdoc.tags, {
    tag: 'param'
  });

  if (_lodash.default.has(context.options, 0)) {
    always = context.options[0] === 'always';
  } else {
    always = true;
  }

  _lodash.default.forEach(jsdocTags, function (jsdocTag) {
    if (!jsdocTag.description) {
      return;
    }

    if (always) {
      if (!_lodash.default.startsWith(jsdocTag.description, '-')) {
        report('There must be a hyphen before @param description.', function (fixer) {
          var replacement = sourceCode.getText(jsdocNode).replace(jsdocTag.description, '- ' + jsdocTag.description);
          return fixer.replaceText(jsdocNode, replacement);
        }, jsdocTag);
      }
    } else if (_lodash.default.startsWith(jsdocTag.description, '-')) {
      report('There must be no hyphen before @param description.', function (fixer) {
        var reg = new RegExp(/(?<=-\s*)\w.*/);
        var replacement = sourceCode.getText(jsdocNode).replace(jsdocTag.description, jsdocTag.description.match(reg));
        return fixer.replaceText(jsdocNode, replacement);
      }, jsdocTag);
    }
  });
});

exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=requireHyphenBeforeParamDescription.js.map